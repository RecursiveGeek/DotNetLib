# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# DotNetLib Open Source Azure Pipelines YAML script
# Developed by Daikin Applied
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pool:
  name: WDT VM W10
  demands:
  - msbuild
  - visualstudio
  - vstest

variables:
  BuildNuGet: 5.3.1
  BuildConfiguration: 'release'
  BuildPlatform: 'any cpu'
  BuildSolutions: '**\*.sln'
  BuildArtifactName: 'drop'
  BuildDebug: false

trigger:
  batch: true
  branches:
    include:
    - master
  
steps:
- task: NuGetToolInstaller@0
  displayName: '[Use NuGet $(BuildNuGet)]'
  inputs:
    versionSpec: $(BuildNuGet)

- task: NuGetCommand@2
  displayName: '[Restore NuGet Packages]'
  inputs:
    restoreSolution: '$(BuildSolutions)'

- task: VSBuild@1
  displayName: '[Build Solution to Artifacts]'
  inputs:
    solution: '$(BuildSolutions)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\\"'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

# Based on .NET Core template (there are assumed defaults)
- task: VSTest@2
  displayName: '[Test Assemblies]'
  inputs:
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: PowerShell@2
  displayName: '[Build .NET Framework NuGet packages]'
  inputs:
    targetType: filePath
    filePath: '.\NuGetPackage.ps1'

- task: PowerShell@2
  displayName: '[Stage Pipeline Artifacts]'
  inputs:
    filePath: '.\NuGetStage.ps1'
    arguments: '$(Build.ArtifactStagingDirectory)'

# publishLocation: container, filePath
- task: PublishBuildArtifacts@1
  displayName: '[Publish Artifacts to Releases]'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(BuildArtifactName)'
    publishLocation: 'Container' 
  condition: succeededOrFailed()
  
# ~End~
